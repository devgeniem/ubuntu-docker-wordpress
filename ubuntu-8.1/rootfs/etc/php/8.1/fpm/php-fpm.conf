; Run this in foregroud so s6 can control it
daemonize = no

; Log all warnings and errors
error_log = ${PHP_ERROR_LOG}
log_level = ${PHP_ERROR_LOG_LEVEL}

; https://www.php.net/manual/en/install.fpm.configuration.php#emergency-restart-threshold
emergency_restart_threshold = ${PHP_EMERGENCY_RESTART_THRESHOLD}
emergency_restart_interval = ${PHP_EMERGENCY_RESTART_INTERVAL}
process_control_timeout = ${PHP_PROCESS_CONTROL_TIMEOUT}

[www]
user = ${WEB_USER}
group = ${WEB_GROUP}
listen = /var/run/php-fpm.sock
listen.owner = ${WEB_USER}
listen.group = ${WEB_GROUP}
pm = ${PHP_PM_MODE}

; Total RAM dedicated to the web server / Max child process size
pm.max_children = ${PHP_PM_MAX_CHILDREN}

pm.start_servers = ${PHP_PM_START_SERVERS}
pm.min_spare_servers = ${PHP_PM_MIN_SPARE_SERVERS}
pm.max_spare_servers = ${PHP_PM_MAX_SPARE_SERVERS}
pm.max_spawn_rate = ${PHP_PM_MAX_SPAWN_RATE}

; Redirect worker stdout and stderr into main error log. If not set, stdout and
; stderr will be redirected to /dev/null according to FastCGI specs.
; Default Value: no
catch_workers_output = yes

; Project web root
chdir = ${WEB_ROOT}

pm.process_idle_timeout = ${PHP_PM_PROCESS_IDLE_TIMEOUT}
pm.max_requests = ${PHP_PM_MAX_REQUESTS}

; used to enable coredumps along with process.dumpable from php-fpm.d/coredumps.conf
rlimit_core = ${PHP_RLIMIT_CORE}

; enable php-fpm ping path
ping.path = ${PHP_PING_PATH}

; Include extra configs
include=/etc/php/8.1/fpm/php-fpm.d/*.conf